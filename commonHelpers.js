import{a as S,i as h,S as w}from"./assets/vendor-b0d10f48.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const a of t.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function m(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=m(e);fetch(e.href,t)}})();const y=(s,r)=>S.get("https://pixabay.com/api/",{params:{key:"44914505-36a6b847b314a6ef1bce975f7",q:s,orientation:"horizontal",safesearch:!0,page:r,per_page:"15"}}),g=s=>s.map(({webformatURL:m,largeImageURL:o,tags:e,likes:t,views:a,comments:L,downloads:b})=>`<li class="gallery-item">
            <a class="gallery-link" href="${o}">
                <img class="gallery-image" src="${m}" alt="${e}" width="360" height="200"/>
                <ul class="gallery-text-list">
                    <li class="gallery-text-item"><h3>Likes</h3><p>${t}</p></li>
                    <li class="gallery-text-item"><h3>Views</h3><p>${a}</p></li>
                    <li class="gallery-text-item"><h3>Comments</h3><p>${L}</p></li>
                    <li class="gallery-text-item"><h3>Downloads</h3><p>${b}</p></li>
                </ul>
            </a>
        </li>`).join(""),l=document.querySelector(".js-search-form"),n=document.querySelector(".js-search-list"),d=document.querySelector(".js-loader"),p=document.querySelector(".js-loader-more"),i=document.querySelector(".js-search-more");let u=1,f=1,c="";l.addEventListener("submit",async s=>{if(s.preventDefault(),c=l.elements.enterForSearsh.value.trim(),!!c){i.classList.contains("is-active")&&i.classList.remove("is-active"),n.innerHTML="",d.classList.add("is-active"),u=1;try{const{data:r}=await y(c,u);if(!r.total){d.classList.remove("is-active"),h.error({position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"}),l.reset();return}n.innerHTML=`${g(r.hits)}`,d.classList.remove("is-active"),i.classList.add("is-active"),r.totalHits<15&&(i.classList.remove("is-active"),h.error({position:"topRight",message:"We're sorry, but you've reached the end of search results."})),l.reset(),v.refresh()}catch{}}});i.addEventListener("click",async()=>{p.classList.add("is-active-more"),i.classList.remove("is-active");try{const{data:s}=await y(c,++u);n.insertAdjacentHTML("beforeend",`${g(s.hits)}`),p.classList.remove("is-active-more"),i.classList.add("is-active"),v.refresh(),window.scrollBy({top:n.firstChild.getBoundingClientRect().height*2,behavior:"smooth"}),f=Math.ceil(s.totalHits/15),f===u&&(i.classList.remove("is-active"),h.info({position:"topRight",message:"We're sorry, but you've reached the end of search results."}))}catch{}});const v=new w(".gallery-link",{captionsData:"alt",captionDelay:250});
//# sourceMappingURL=commonHelpers.js.map
